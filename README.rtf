{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww28600\viewh16080\viewkind0
\deftab720
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\partightenfactor0

\f0\fs22 \cf0 \expnd0\expndtw0\kerning0
Meetup Events pulling from your device\'92s location. \
\
if location in simulator is 
\b not
\b0  set up, the default location is 
\b New York
\b0 . The api key in this repo is free to use.\
\
Summery: The app requests device location, then uses the location coordinates to request Meetup's open api /2/open_events with the user\'92s latitude/longitude. It displays 10 events ordered by distance to the user on a table view, and shows the relevant city name at the top of the screen. Tapping into each event shows the details of the event along with a favorite button than can be toggled (and remembers changes).\
\
\'97\'97-Networking\'97\'97\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\partightenfactor0

\b \cf0 struct Event 
\b0 is a model structured around the specs required for this code test (event/ group names, rsvp, who, time, etc). Event\'92s optional init method is used to help parse JSON data results in the networking call. \
\

\b struct Resource 
\b0 is an abstract structure with a variable url, and a closure variable that takes NSData, then uses NSJSONSerialization to return a generic type. Since Event is the data type that is being conformed later, it is better to keep each modular independent (which I learned from {\field{\*\fldinst{HYPERLINK "http://objc.io"}}{\fldrslt 
\b \ul \ulc0 objc.io}}). \
\

\b class MeetupService 
\b0 handles networking requests with NSURLSession,
\b  
\b0 function 
\b load
\b0  captures the data returned from Meetup service, and 
\b struct Resource
\b0  parses this returned data and captures it as an array of type Event.\
\
\'97\'97-Location\'97-\

\b struct
\b0  
\b DeviceLocation 
\b0 is a location related model with variables of lat, long, and cityName for data. However, city name is a result from reverseGeocodeLocation, his method takes time. Its return String cityName was not actually used as I designed to. The city name is copied from Meetup api ca\
\

\b struct
\b0  
\b DeviceLocation 
\b0 is a location related model containing variables of lat, long, and cityName. I wrote a method to convert the lat/long to a city name using reverseGeocodeLocation, but realized the threading time was unexpectedly slower to return a result. This is an area I would improve, but for the short time of the code test, I decided to take the city name of the venue from the closest Event for a quick fix.\
\

\b class Location 
\b0 conforms to CLLocationmanagerDelegate. It requests device\'92s location while using the app. Request stops after the location is found.\
\
\'97-Protocols\'97\'97-\

\b canGetLocation 
\b0 protocol handles location request. 
\b LoadingAPI
\b0  protocol handles Meetup api calls.\
\

\b ViewController 
\b0 adapts canGetLocation and LoadingAPI protocols. 
\b EventViewController 
\b0 shows the detail of the event. \
\

\b eventList Array
\b0  is a global variable that stores the events. It\'92s not the best practice for a real app, however I needed it to be global in order to save the favorite states from EventViewController.\
\
\
\
}